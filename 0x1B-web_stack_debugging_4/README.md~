# 0x1B. Web Stack Debugging #4

## Overview

This project focuses on debugging issues related to a web server setup featuring Nginx. The goal is to identify and fix problems causing a high number of failed requests under load. We are using ApacheBench (ab) to simulate HTTP requests to the server and analyze its performance. Additionally, the project involves modifying the OS configuration to handle user login issues related to file limits.

## Requirements

- All files are interpreted on Ubuntu 14.04 LTS.
- All files should end with a new line.
- A `README.md` file at the root of the project folder is mandatory.
- Puppet manifests must pass `puppet-lint` version 2.1.1 without any errors.
- Puppet manifests must run without errors.
- The first line of each Puppet manifest must be a comment explaining what the manifest is about.
- Puppet manifest files must have the `.pp` extension.
- Files will be checked with Puppet v3.4.

## Install `puppet-lint`

To install `puppet-lint` version 2.1.1, run the following commands:

```bash
$ apt-get install -y ruby
$ gem install puppet-lint -v 2.1.1
```

## Tasks

### 0. Sky is the Limit, Let's Bring That Limit Higher

**Objective:** 

In this task, we test the web server's performance using ApacheBench and identify issues causing failed requests. After analyzing the output, we adjust the server configuration to handle the load better, ensuring zero failed requests.

**Steps:**

1. Run ApacheBench to simulate 2000 HTTP requests with a concurrency level of 100.
   ```bash
   ab -c 100 -n 2000 localhost/
   ```
2. Observe the number of failed requests and non-2xx responses.
3. Update the Puppet manifest (`0-the_sky_is_the_limit_not.pp`) to adjust Nginx settings.
4. Apply the Puppet manifest to fix the issue.
   ```bash
   puppet apply 0-the_sky_is_the_limit_not.pp
   ```
5. Rerun ApacheBench to confirm the fix.
   ```bash
   ab -c 100 -n 2000 localhost/
   ```

### 1. User Limit

**Objective:**

Fix the OS configuration to prevent "Too many open files" errors when logging in with the `holberton` user and opening files.

**Steps:**

1. Attempt to log in with the `holberton` user and observe the "Too many open files" error.
   ```bash
   su - holberton
   ```
2. Update the Puppet manifest (`1-user_limit.pp`) to increase the file descriptor limit.
3. Apply the Puppet manifest to modify the OS configuration.
   ```bash
   puppet apply 1-user_limit.pp
   ```
4. Log in again with the `holberton` user to verify the fix.
   ```bash
   su - holberton
   ```

## Repository Structure

```plaintext
.
├── 0-the_sky_is_the_limit_not.pp
├── 1-user_limit.pp
└── README.md
```

## How to Use

1. Clone the repository:

   ```bash
   git clone https://github.com/your_username/alx-system_engineering-devops.git
   cd alx-system_engineering-devops/0x1B-web_stack_debugging_4
   ```

2. Run the Puppet manifests as described in the tasks.

## License

This project is licensed under the ALX Software Engineering Program. All rights reserved © 2024 ALX.

---

Ensure that all commands are run with appropriate privileges (e.g., using `sudo` where necessary) and that you have proper access to the server environment.